/**
 * TempApi
 * This is a sample openApi document
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: lampralexandros@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Assessmetric model module.
 * @module model/Assessmetric
 * @version 1.0.0
 */
class Assessmetric {
    /**
     * Constructs a new <code>Assessmetric</code>.
     * @alias module:model/Assessmetric
     * @param weight {Number} 
     * @param bmi {Number} 
     * @param waistcirc {Number} 
     * @param oximetry {Number} 
     * @param proteinintake {Number} 
     * @param systolic {Number} 
     * @param diastolic {Number} 
     * @param grainintake {Number} 
     * @param fruitintake {Number} 
     * @param vegintake {Number} 
     */
    constructor(weight, bmi, waistcirc, oximetry, proteinintake, systolic, diastolic, grainintake, fruitintake, vegintake) { 
        
        Assessmetric.initialize(this, weight, bmi, waistcirc, oximetry, proteinintake, systolic, diastolic, grainintake, fruitintake, vegintake);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, weight, bmi, waistcirc, oximetry, proteinintake, systolic, diastolic, grainintake, fruitintake, vegintake) { 
        obj['weight'] = weight;
        obj['bmi'] = bmi;
        obj['waistcirc'] = waistcirc;
        obj['oximetry'] = oximetry;
        obj['proteinintake'] = proteinintake;
        obj['systolic'] = systolic;
        obj['diastolic'] = diastolic;
        obj['grainintake'] = grainintake;
        obj['fruitintake'] = fruitintake;
        obj['vegintake'] = vegintake;
    }

    /**
     * Constructs a <code>Assessmetric</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Assessmetric} obj Optional instance to populate.
     * @return {module:model/Assessmetric} The populated <code>Assessmetric</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Assessmetric();

            if (data.hasOwnProperty('_id')) {
                obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
            }
            if (data.hasOwnProperty('weight')) {
                obj['weight'] = ApiClient.convertToType(data['weight'], 'Number');
            }
            if (data.hasOwnProperty('bmi')) {
                obj['bmi'] = ApiClient.convertToType(data['bmi'], 'Number');
            }
            if (data.hasOwnProperty('waistcirc')) {
                obj['waistcirc'] = ApiClient.convertToType(data['waistcirc'], 'Number');
            }
            if (data.hasOwnProperty('oximetry')) {
                obj['oximetry'] = ApiClient.convertToType(data['oximetry'], 'Number');
            }
            if (data.hasOwnProperty('proteinintake')) {
                obj['proteinintake'] = ApiClient.convertToType(data['proteinintake'], 'Number');
            }
            if (data.hasOwnProperty('systolic')) {
                obj['systolic'] = ApiClient.convertToType(data['systolic'], 'Number');
            }
            if (data.hasOwnProperty('diastolic')) {
                obj['diastolic'] = ApiClient.convertToType(data['diastolic'], 'Number');
            }
            if (data.hasOwnProperty('grainintake')) {
                obj['grainintake'] = ApiClient.convertToType(data['grainintake'], 'Number');
            }
            if (data.hasOwnProperty('fruitintake')) {
                obj['fruitintake'] = ApiClient.convertToType(data['fruitintake'], 'Number');
            }
            if (data.hasOwnProperty('vegintake')) {
                obj['vegintake'] = ApiClient.convertToType(data['vegintake'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {String} _id
 */
Assessmetric.prototype['_id'] = undefined;

/**
 * @member {Number} weight
 */
Assessmetric.prototype['weight'] = undefined;

/**
 * @member {Number} bmi
 */
Assessmetric.prototype['bmi'] = undefined;

/**
 * @member {Number} waistcirc
 */
Assessmetric.prototype['waistcirc'] = undefined;

/**
 * @member {Number} oximetry
 */
Assessmetric.prototype['oximetry'] = undefined;

/**
 * @member {Number} proteinintake
 */
Assessmetric.prototype['proteinintake'] = undefined;

/**
 * @member {Number} systolic
 */
Assessmetric.prototype['systolic'] = undefined;

/**
 * @member {Number} diastolic
 */
Assessmetric.prototype['diastolic'] = undefined;

/**
 * @member {Number} grainintake
 */
Assessmetric.prototype['grainintake'] = undefined;

/**
 * @member {Number} fruitintake
 */
Assessmetric.prototype['fruitintake'] = undefined;

/**
 * @member {Number} vegintake
 */
Assessmetric.prototype['vegintake'] = undefined;






export default Assessmetric;

